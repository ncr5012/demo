[0.016s] Invoking command in '/home/rlagent/jay_ws/build/jaybot': AMENT_PREFIX_PATH=/home/rlagent/jay_ws/install/rl_custom_messages:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/rlagent/jay_ws/install/rl_custom_messages:/opt/ros/humble LD_LIBRARY_PATH=/home/rlagent/jay_ws/install/rl_custom_messages/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/rlagent/jay_ws/install/rl_custom_messages/local/lib/python3.10/dist-packages:${PYTHONPATH} /usr/bin/cmake /home/rlagent/jay_ws/jaybot -DCMAKE_INSTALL_PREFIX=/home/rlagent/jay_ws/install/jaybot
[0.113s] -- The C compiler identification is GNU 11.3.0
[0.207s] -- The CXX compiler identification is GNU 11.3.0
[0.218s] -- Detecting C compiler ABI info
[0.342s] -- Detecting C compiler ABI info - done
[0.350s] -- Check for working C compiler: /usr/bin/cc - skipped
[0.350s] -- Detecting C compile features
[0.351s] -- Detecting C compile features - done
[0.356s] -- Detecting CXX compiler ABI info
[0.498s] -- Detecting CXX compiler ABI info - done
[0.505s] -- Check for working CXX compiler: /usr/bin/c++ - skipped
[0.506s] -- Detecting CXX compile features
[0.506s] -- Detecting CXX compile features - done
[0.510s] -- Found ament_cmake: 1.3.4 (/opt/ros/humble/share/ament_cmake/cmake)
[0.736s] -- Found Python3: /usr/bin/python3.10 (found version "3.10.6") found components: Interpreter 
[0.848s] -- Found rclcpp: 16.0.4 (/opt/ros/humble/share/rclcpp/cmake)
[0.905s] -- Found rosidl_generator_c: 3.1.4 (/opt/ros/humble/share/rosidl_generator_c/cmake)
[0.912s] -- Found rosidl_adapter: 3.1.4 (/opt/ros/humble/share/rosidl_adapter/cmake)
[0.926s] -- Found rosidl_generator_cpp: 3.1.4 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)
[0.948s] -- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
[0.977s] -- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
[1.076s] -- Found rmw_implementation_cmake: 6.1.1 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)
[1.079s] -- Found rmw_fastrtps_cpp: 6.2.2 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)
[1.230s] -- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "3.0.2")  
[1.262s] -- Found FastRTPS: /opt/ros/humble/include  
[1.323s] -- Using RMW implementation 'rmw_fastrtps_cpp' as default
[1.336s] -- Looking for pthread.h
[1.469s] -- Looking for pthread.h - found
[1.471s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
[1.600s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
[1.602s] -- Found Threads: TRUE  
[1.824s] -- Found rl_custom_messages: 0.0.0 (/home/rlagent/jay_ws/install/rl_custom_messages/share/rl_custom_messages/cmake)
[1.942s] -- Configuring done
[1.972s] -- Generating done
[1.975s] -- Build files have been written to: /home/rlagent/jay_ws/build/jaybot
[1.993s] Invoked command in '/home/rlagent/jay_ws/build/jaybot' returned '0': AMENT_PREFIX_PATH=/home/rlagent/jay_ws/install/rl_custom_messages:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/rlagent/jay_ws/install/rl_custom_messages:/opt/ros/humble LD_LIBRARY_PATH=/home/rlagent/jay_ws/install/rl_custom_messages/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/rlagent/jay_ws/install/rl_custom_messages/local/lib/python3.10/dist-packages:${PYTHONPATH} /usr/bin/cmake /home/rlagent/jay_ws/jaybot -DCMAKE_INSTALL_PREFIX=/home/rlagent/jay_ws/install/jaybot
[1.997s] Invoking command in '/home/rlagent/jay_ws/build/jaybot': AMENT_PREFIX_PATH=/home/rlagent/jay_ws/install/rl_custom_messages:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/rlagent/jay_ws/install/rl_custom_messages:/opt/ros/humble LD_LIBRARY_PATH=/home/rlagent/jay_ws/install/rl_custom_messages/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/rlagent/jay_ws/install/rl_custom_messages/local/lib/python3.10/dist-packages:${PYTHONPATH} /usr/bin/cmake --build /home/rlagent/jay_ws/build/jaybot -- -j2 -l2
[2.119s] [ 20%] [32mBuilding CXX object CMakeFiles/range_subscriber.dir/src/range_subscriber.cpp.o[0m
[2.121s] [ 40%] [32mBuilding CXX object CMakeFiles/range_publisher.dir/src/RangeSensor.cc.o[0m
[3.037s] [ 60%] [32mBuilding CXX object CMakeFiles/range_publisher.dir/src/range_publisher.cpp.o[0m
[6.283s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[6.283s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[6.285s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[6.285s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[6.285s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[6.285s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[6.286s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[6.286s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[6.286s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[6.286s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[6.286s]                  from [01m[K/home/rlagent/jay_ws/jaybot/src/range_subscriber.cpp:4[m[K:
[6.286s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[6.287s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.287s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.287s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.287s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.287s] [01m[K/home/rlagent/jay_ws/jaybot/src/range_subscriber.cpp:15:83:[m[K   required from here
[6.287s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&)>, std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>[m[Kâ€™})
[6.288s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[6.288s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[6.288s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[6.289s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[6.289s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[6.289s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[6.290s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[6.290s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[6.290s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[6.291s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[6.291s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[6.291s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[6.292s]                  from [01m[K/home/rlagent/jay_ws/jaybot/src/range_subscriber.cpp:4[m[K:
[6.292s] [01m[K/usr/include/c++/11/variant:1477:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&)>, std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[6.293s]  1477 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[6.293s]       |         [01;36m[K^~~~~~~~[m[K
[6.294s] [01m[K/usr/include/c++/11/variant:1477:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[6.294s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&)>, std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[6.295s] [01m[K/usr/include/c++/11/variant:1473:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&)>, std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&)>, std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&)>, std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&)>, std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&)>, std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>][m[Kâ€™
[6.295s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[6.296s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.297s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.298s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.298s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.306s] [01m[K/home/rlagent/jay_ws/jaybot/src/range_subscriber.cpp:15:83:[m[K   required from here
[6.307s] [01m[K/usr/include/c++/11/variant:1391:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[6.307s]  1391 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[6.307s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[6.307s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[6.307s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.307s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.308s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.308s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rl_custom_messages::msg::RangeArray_<std::allocator<void> >; CallbackT = std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.308s] [01m[K/home/rlagent/jay_ws/jaybot/src/range_subscriber.cpp:15:83:[m[K   required from here
[6.308s] [01m[K/usr/include/c++/11/variant:1414:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&)>, std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[6.308s]  1414 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[6.308s]       |                [01;36m[K^~~~~~~~[m[K
[6.309s] [01m[K/usr/include/c++/11/variant:1414:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&)>, std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[6.309s]  1414 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[6.309s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[6.309s] [01m[K/usr/include/c++/11/variant:1415:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&)>, std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[6.309s]  1415 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[6.309s]       |                [01;36m[K^~~~~~~~[m[K
[6.309s] [01m[K/usr/include/c++/11/variant:1415:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::_Bind<void (RangeSubscriber::*(RangeSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&) const>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&)>, std::function<void(const rl_custom_messages::msg::RangeArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> >, std::default_delete<rl_custom_messages::msg::RangeArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const rl_custom_messages::msg::RangeArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rl_custom_messages::msg::RangeArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[6.310s]  1415 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[6.310s]       |                          [01;36m[K^~~~~~~~~[m[K
[6.515s] [01m[K/home/rlagent/jay_ws/jaybot/src/range_publisher.cpp:[m[K In constructor â€˜[01m[KRangePublisher::RangePublisher()[m[Kâ€™:
[6.516s] [01m[K/home/rlagent/jay_ws/jaybot/src/range_publisher.cpp:18:27:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KRangesensor::Rangesensor()[m[Kâ€™
[6.516s]    18 |   : Node("range_publisher"[01;31m[K)[m[K
[6.516s]       |                           [01;31m[K^[m[K
[6.516s] In file included from [01m[K/home/rlagent/jay_ws/jaybot/src/range_publisher.cpp:10[m[K:
[6.516s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:19:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRangesensor::Rangesensor(int, int)[m[Kâ€™
[6.516s]    19 |     [01;36m[KRangesensor[m[K(int trigpin, int echopin);
[6.517s]       |     [01;36m[K^~~~~~~~~~~[m[K
[6.517s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:19:5:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 0 provided
[6.517s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRangesensor::Rangesensor(const Rangesensor&)[m[Kâ€™
[6.517s]    15 | class [01;36m[KRangesensor[m[K
[6.517s]       |       [01;36m[K^~~~~~~~~~~[m[K
[6.517s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[6.517s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRangesensor::Rangesensor(Rangesensor&&)[m[Kâ€™
[6.517s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[6.518s] [01m[K/home/rlagent/jay_ws/jaybot/src/range_publisher.cpp:18:27:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KRangesensor::Rangesensor()[m[Kâ€™
[6.518s]    18 |   : Node("range_publisher"[01;31m[K)[m[K
[6.518s]       |                           [01;31m[K^[m[K
[6.518s] In file included from [01m[K/home/rlagent/jay_ws/jaybot/src/range_publisher.cpp:10[m[K:
[6.518s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:19:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRangesensor::Rangesensor(int, int)[m[Kâ€™
[6.518s]    19 |     [01;36m[KRangesensor[m[K(int trigpin, int echopin);
[6.518s]       |     [01;36m[K^~~~~~~~~~~[m[K
[6.519s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:19:5:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 0 provided
[6.519s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRangesensor::Rangesensor(const Rangesensor&)[m[Kâ€™
[6.519s]    15 | class [01;36m[KRangesensor[m[K
[6.519s]       |       [01;36m[K^~~~~~~~~~~[m[K
[6.519s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[6.519s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRangesensor::Rangesensor(Rangesensor&&)[m[Kâ€™
[6.519s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[6.520s] [01m[K/home/rlagent/jay_ws/jaybot/src/range_publisher.cpp:18:27:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KRangesensor::Rangesensor()[m[Kâ€™
[6.520s]    18 |   : Node("range_publisher"[01;31m[K)[m[K
[6.520s]       |                           [01;31m[K^[m[K
[6.520s] In file included from [01m[K/home/rlagent/jay_ws/jaybot/src/range_publisher.cpp:10[m[K:
[6.520s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:19:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRangesensor::Rangesensor(int, int)[m[Kâ€™
[6.520s]    19 |     [01;36m[KRangesensor[m[K(int trigpin, int echopin);
[6.520s]       |     [01;36m[K^~~~~~~~~~~[m[K
[6.521s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:19:5:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 0 provided
[6.521s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRangesensor::Rangesensor(const Rangesensor&)[m[Kâ€™
[6.521s]    15 | class [01;36m[KRangesensor[m[K
[6.521s]       |       [01;36m[K^~~~~~~~~~~[m[K
[6.521s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[6.521s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRangesensor::Rangesensor(Rangesensor&&)[m[Kâ€™
[6.521s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[6.521s] [01m[K/home/rlagent/jay_ws/jaybot/src/range_publisher.cpp:18:27:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KRangesensor::Rangesensor()[m[Kâ€™
[6.522s]    18 |   : Node("range_publisher"[01;31m[K)[m[K
[6.522s]       |                           [01;31m[K^[m[K
[6.522s] In file included from [01m[K/home/rlagent/jay_ws/jaybot/src/range_publisher.cpp:10[m[K:
[6.522s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:19:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRangesensor::Rangesensor(int, int)[m[Kâ€™
[6.522s]    19 |     [01;36m[KRangesensor[m[K(int trigpin, int echopin);
[6.522s]       |     [01;36m[K^~~~~~~~~~~[m[K
[6.530s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:19:5:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 0 provided
[6.530s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRangesensor::Rangesensor(const Rangesensor&)[m[Kâ€™
[6.530s]    15 | class [01;36m[KRangesensor[m[K
[6.530s]       |       [01;36m[K^~~~~~~~~~~[m[K
[6.530s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[6.531s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRangesensor::Rangesensor(Rangesensor&&)[m[Kâ€™
[6.531s] [01m[K/home/rlagent/jay_ws/jaybot/include/jaybot/RangeSensor.h:15:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[6.531s] [01m[K/home/rlagent/jay_ws/jaybot/src/range_publisher.cpp:[m[K In member function â€˜[01m[Kvoid RangePublisher::timer_callback()[m[Kâ€™:
[6.531s] [01m[K/home/rlagent/jay_ws/jaybot/src/range_publisher.cpp:41:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing RangeArray = struct rl_custom_messages::msg::RangeArray_<std::allocator<void> >[m[Kâ€™ {aka â€˜[01m[Kstruct rl_custom_messages::msg::RangeArray_<std::allocator<void> >[m[Kâ€™} has no member named â€˜[01m[Kdata[m[Kâ€™
[6.531s]    41 |     message.[01;31m[Kdata[m[K = data;
[6.531s]       |             [01;31m[K^~~~[m[K
[7.665s] gmake[2]: *** [CMakeFiles/range_publisher.dir/build.make:90: CMakeFiles/range_publisher.dir/src/range_publisher.cpp.o] Error 1
[7.666s] gmake[1]: *** [CMakeFiles/Makefile2:139: CMakeFiles/range_publisher.dir/all] Error 2
[7.666s] gmake[1]: *** Waiting for unfinished jobs....
[9.072s] gmake[2]: *** [CMakeFiles/range_subscriber.dir/build.make:76: CMakeFiles/range_subscriber.dir/src/range_subscriber.cpp.o] Error 1
[9.072s] gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/range_subscriber.dir/all] Error 2
[9.072s] gmake: *** [Makefile:146: all] Error 2
[9.077s] Invoked command in '/home/rlagent/jay_ws/build/jaybot' returned '2': AMENT_PREFIX_PATH=/home/rlagent/jay_ws/install/rl_custom_messages:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/rlagent/jay_ws/install/rl_custom_messages:/opt/ros/humble LD_LIBRARY_PATH=/home/rlagent/jay_ws/install/rl_custom_messages/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/rlagent/jay_ws/install/rl_custom_messages/local/lib/python3.10/dist-packages:${PYTHONPATH} /usr/bin/cmake --build /home/rlagent/jay_ws/build/jaybot -- -j2 -l2
